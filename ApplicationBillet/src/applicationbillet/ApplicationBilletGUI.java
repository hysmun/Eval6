/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applicationbillet;

import Data.Vols;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import libs.TickmapClient;
import org.bouncycastle.util.encoders.Base64;
import protocole.TICKMAPTYPE;
import protocole.tickmap;

/**
 *
 * @author Morghen
 */
public class ApplicationBilletGUI extends javax.swing.JFrame {

    public TickmapClient tc = null;
    
    public List<Vols> lv = null;
    
    /**
     * Creates new form ApplicationBilletGUI
     */
    public ApplicationBilletGUI() {
        initComponents();
    }
    
    public ApplicationBilletGUI(TickmapClient ptc) {
        initComponents();
        tc = ptc;
    }
    
    public void RefreshList(){
        tc.write(new tickmap(TICKMAPTYPE.GETLISTVOL));
        tickmap response = tc.read();
        if(response.getType() == TICKMAPTYPE.GETLISTVOL){
            System.out.println("Response ListVols = "+response.getMessage());
            ByteArrayInputStream bais = new ByteArrayInputStream(Base64.decode(response.getMessage().getBytes()));
            try {
                ObjectInputStream ois = new ObjectInputStream(bais);
                lv = (LinkedList<Vols>) ois.readObject();
            } catch (IOException ex) {
                Logger.getLogger(ApplicationBilletGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ApplicationBilletGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        listeVolsTable.setModel(new MyModel(lv));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listeVolsTable = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        achatButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listeVolsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(listeVolsTable);

        refreshButton.setText("refresh");
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshButtonMouseClicked(evt);
            }
        });

        achatButton.setText("Acheter");
        achatButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                achatButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshButton)
                    .addComponent(achatButton))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(refreshButton)
                .addGap(52, 52, 52)
                .addComponent(achatButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseClicked
        RefreshList();
    }//GEN-LAST:event_refreshButtonMouseClicked

    private void achatButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_achatButtonMouseClicked
        try{
            if(listeVolsTable.getSelectedRow() >= 0){
                //
                Vols vol = lv.get(listeVolsTable.getSelectedRow());
                AchatBillet ab = new AchatBillet(this, true, vol, tc);
                ab.setVisible(true);
            }
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_achatButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicationBilletGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicationBilletGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicationBilletGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationBilletGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicationBilletGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton achatButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listeVolsTable;
    private javax.swing.JButton refreshButton;
    // End of variables declaration//GEN-END:variables

    private static class MyModel implements TableModel {
        String[] columnName = {"idVols","destination","","","",""};
        Class<?>[] classes = {};

        List<Vols> l = null;
        
        public MyModel(List e) {
            l = e;
        }

        @Override
        public int getRowCount() {
            return l.size();
        }

        @Override
        public int getColumnCount() {
            return 6;
        }

        @Override
        public String getColumnName(int columnIndex) {
            return columnName[columnIndex];
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Vols v = l.get(rowIndex);
            Object ret=null;
            switch(columnIndex){
                case 0:
                    ret = v.getIdVols();
                    break;
                case 1:
                    ret = v.getDestination();
                    break;
                case 2:
                    ret = v.getDateArriver();
                    break;
                case 3:
                    ret = v.getDateDepart();
                    break;
                case 4:
                    ret = v.getNbrBillet();
                    break;
                case 5:
                    ret = v.getNbrDispo();
                    break;
            }
            return ret.toString();
        }

        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void addTableModelListener(TableModelListener l) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void removeTableModelListener(TableModelListener l) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }
}
